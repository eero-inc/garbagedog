#!/usr/bin/env python

import argparse

import pkg_resources
from watchdog.observers import Observer

from garbagedog.event_processor import GCEventProcessor

version = pkg_resources.require("garbagedog")[0].version
parser = argparse.ArgumentParser(description='Parse JVM gc.logs and emit stats over dogstatsd',
                                 usage="garbagedog --log-dir /var/log/eero/", epilog="Version {}".format(version))

parser.add_argument('--tags',
                    help='Extra datadog tags, comma separated; ie "application:actorcluster, version:2017.07.27"')

parser.add_argument('--dogstatsd-host',
                    help='dogstatsd host (default: %(default)s)', default='localhost')

parser.add_argument('--dogstatsd-port', type=int,
                    help='dogstatsd port (default: %(default)s)', default=8125)

parser.add_argument('--verbose', action='store_true',
                    help='Emit noisy messages on stdout')

parser.add_argument('--log-dir',
                    help='Read from this log dir instead of stdin')

parser.add_argument('--glob-pattern',
                    help='Glob pattern to select gc.log files (default: %(default)s)', default="*gc.log*")

args = parser.parse_args()

parsed_tags = []
if args.tags:
    parsed_tags = args.tags.replace(' ', '').split(',')

gc_event_processor = GCEventProcessor(
    args.dogstatsd_host,
    args.dogstatsd_port,
    parsed_tags,
    verbose=args.verbose,
    glob_pattern=args.glob_pattern
)
try:
    if args.log_dir:
        observer = Observer()
        observer.schedule(gc_event_processor, path=args.log_dir, recursive=False)
        observer.start()
        observer.join()
    else:
        gc_event_processor.process_stdin()
except KeyboardInterrupt:
    pass
